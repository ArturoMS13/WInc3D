#!/usr/bin/env python
"""
Script that computes the velocity profiles from
Incompact3D
"""
import numpy as np
from scipy import interpolate
import matplotlib.pyplot as plt

ufile=open("ux0200","rb")
vfile=open("uy0200","rb")
wfile=open("uz0200","rb")
vortfile=open("vort0200","rb")

ux=np.fromfile(ufile,dtype=np.float64)
uy=np.fromfile(vfile,dtype=np.float64)
uz=np.fromfile(wfile,dtype=np.float64)
vort=np.fromfile(vortfile,dtype=np.float64)

# Turn vectors into 3D arrays
nx=589
ny=121
nz=133
dx=11.76/(nx-1)
dy=2.0/(ny-1)
dz=2.7/(nz-1)

x=np.zeros((nx,ny,nz))
y=np.zeros((nx,ny,nz))
z=np.zeros((nx,ny,nz))

u=np.zeros((nx,ny,nz))
v=np.zeros((nx,ny,nz))
w=np.zeros((nx,ny,nz))
omega=np.zeros((nx,ny,nz))

for i in range(0,nx):
    for j in range(0,ny):
        for k in range(0,nz):
            x[i,j,k]=i*dx
            y[i,j,k]=j*dy
            z[i,j,k]=k*dz
            u[i,j,k]=ux[i+nx*(j+ny*k)]
            v[i,j,k]=uy[i+nx*(j+ny*k)]
            w[i,j,k]=uz[i+nx*(j+ny*k)]
            omega[i,j,k]=vort[i+nx*(j+ny*k)]

# Find profiles
R=0.45
xloc=2+2.0*R

ixloc=np.where(abs(x[:,0,0]-xloc)==abs(x[:,0,0]-xloc).min())
print(ixloc)
jxloc=np.where(abs(y[0,:,0]-0.82)==abs(y[0,:,0]-0.82).min())
print(jxloc)

print(u[ixloc,jxloc,:])
print(z[ixloc,jxloc,:])

#exit()

plt.figure()
plt.pcolormesh(x[:,49,:],z[:,49,:],u[:,49,:],cmap=plt.get_cmap('jet'))
plt.colorbar()
plt.xlim(0,11.76)
plt.ylim(0,2.7)
plt.axis('equal')
plt.show()
